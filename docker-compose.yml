version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: customo
      POSTGRES_USER: customo
      POSTGRES_PASSWORD: changeme
    volumes:
      - db-data:/var/lib/postgresql/data

  backend-java:
    build: ./backend-java
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/customo
      SPRING_DATASOURCE_USERNAME: customo
      SPRING_DATASOURCE_PASSWORD: changeme
      JWT_SECRET: change-this-secret-in-prod
      SPRING_PROFILES_ACTIVE: prod
    depends_on:
      - db

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "80:80"
    depends_on:
      - backend-java

volumes:
  db-data:
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: customo-postgres
    environment:
      POSTGRES_DB: customo_db
      POSTGRES_USER: customo_user
      POSTGRES_PASSWORD: customo_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - customo-network
    restart: unless-stopped

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: customo-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - customo-network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: customo-backend
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://customo_user:customo_password@postgres:5432/customo_db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - JWT_EXPIRES_IN=7d
      - PORT=5000
      - FRONTEND_URL=http://localhost:8080
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - redis
    networks:
      - customo-network
    restart: unless-stopped
    volumes:
      - ./backend/uploads:/app/uploads

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: customo-frontend
    environment:
      - VITE_API_URL=http://localhost:5000/api
      - VITE_APP_NAME=Customo RoBo
      - VITE_APP_VERSION=1.0.0
    ports:
      - "8080:80"
    depends_on:
      - backend
    networks:
      - customo-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: customo-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - customo-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  customo-network:
    driver: bridge
